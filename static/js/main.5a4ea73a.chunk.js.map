{"version":3,"sources":["components/UserInfo/UserInfo.tsx","components/TodoInfo/TodoInfo.tsx","components/TodoList/TodoList.tsx","api/users.ts","App.tsx","api/todos.ts","index.tsx"],"names":["UserInfo","user","name","email","className","href","TodoInfo","todo","title","completed","id","classNames","TodoList","todos","map","username","newTaskId","getUser","userId","usersFromServer","find","App","useState","todosList","changeTodosList","choosedUserId","changeUserId","inputValue","changeInputValue","showInputError","toggleInputError","showUserError","toggleUserError","handleInput","event","target","value","replace","Error","action","method","onSubmit","preventDefault","newTask","tasks","htmlFor","type","placeholder","onChange","disabled","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.5a4ea73a.chunk.js","sourcesContent":["import { FC } from 'react';\nimport './UserInfo.scss';\nimport { User } from '../../types/User';\n\ntype Props = {\n  user: User;\n};\n\nexport const UserInfo: FC<Props> = ({ user }) => {\n  const {\n    name,\n    email,\n  } = user;\n\n  return (\n    <a className=\"UserInfo\" href={`mailto:${email}`}>\n      {name}\n    </a>\n  );\n};\n","import { FC } from 'react';\nimport classNames from 'classnames';\nimport './TodoInfo.scss';\nimport { Todo } from '../../types/Todo';\nimport { UserInfo } from '../UserInfo';\n\ntype Props = {\n  todo: Todo;\n};\n\nexport const TodoInfo: FC<Props> = ({ todo }) => {\n  const {\n    title,\n    completed,\n    user,\n    id,\n  } = todo;\n\n  return (\n    <article\n      data-id={id}\n      className={classNames(\n        'TodoInfo',\n        {\n          'TodoInfo--completed': completed,\n        },\n      )}\n    >\n      <h2 className=\"TodoInfo__title\">\n        {title}\n      </h2>\n\n      {\n        user\n          ? <UserInfo user={user} />\n          : 'No user found'\n      }\n    </article>\n  );\n};\n","import { FC } from 'react';\nimport { TodoInfo } from '../TodoInfo';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[];\n};\n\nexport const TodoList: FC<Props> = ({ todos }) => {\n  return (\n    <section className=\"TodoList\">\n      {todos.map((todo) => {\n        return (\n          <TodoInfo todo={todo} key={todo.id} />\n        );\n      })}\n    </section>\n  );\n};\n","export default [\n  {\n    id: 1,\n    name: 'Leanne Graham',\n    username: 'Bret',\n    email: 'Sincere@april.biz',\n  },\n  {\n    id: 2,\n    name: 'Ervin Howell',\n    username: 'Antonette',\n    email: 'Shanna@melissa.tv',\n  },\n  {\n    id: 3,\n    name: 'Clementine Bauch',\n    username: 'Samantha',\n    email: 'Nathan@yesenia.net',\n  },\n  {\n    id: 4,\n    name: 'Patricia Lebsack',\n    username: 'Karianne',\n    email: 'Julianne.OConner@kory.org',\n  },\n  {\n    id: 5,\n    name: 'Chelsey Dietrich',\n    username: 'Kamren',\n    email: 'Lucio_Hettinger@annie.ca',\n  },\n  {\n    id: 6,\n    name: 'Mrs. Dennis Schulist',\n    username: 'Leopoldo_Corkery',\n    email: 'Karley_Dach@jasper.info',\n  },\n  {\n    id: 7,\n    name: 'Kurtis Weissnat',\n    username: 'Elwyn.Skiles',\n    email: 'Telly.Hoeger@billy.biz',\n  },\n  {\n    id: 8,\n    name: 'Nicholas Runolfsdottir V',\n    username: 'Maxime_Nienow',\n    email: 'Sherwood@rosamond.me',\n  },\n  {\n    id: 9,\n    name: 'Glenna Reichert',\n    username: 'Delphine',\n    email: 'Chaim_McDermott@dana.io',\n  },\n  {\n    id: 10,\n    name: 'Clementina DuBuque',\n    username: 'Moriah.Stanton',\n    email: 'Rey.Padberg@karina.biz',\n  },\n];\n","import './App.scss';\nimport { ChangeEvent, useState } from 'react';\nimport { TodoList } from './components/TodoList';\nimport { User } from './types/User';\nimport { Todo } from './types/Todo';\n\nimport usersFromServer from './api/users';\nimport todosFromServer from './api/todos';\n\nlet newTaskId = 0;\n\nconst getUser = (userId: number): User | null => {\n  const foundUser = usersFromServer.find((user) => user.id === userId);\n\n  return foundUser || null;\n};\n\nconst todos: Todo[] = todosFromServer.map((todo) => {\n  if (todo.id >= newTaskId) {\n    newTaskId = todo.id + 1;\n  }\n\n  return {\n    ...todo,\n    user: getUser(todo.id),\n  };\n});\n\nexport const App = () => {\n  const [todosList, changeTodosList] = useState(todos);\n  const [choosedUserId, changeUserId] = useState(0);\n  const [inputValue, changeInputValue] = useState('');\n  const [showInputError, toggleInputError] = useState(false);\n  const [showUserError, toggleUserError] = useState(false);\n\n  const printError = () => {\n    if (!inputValue) {\n      toggleInputError(true);\n    }\n\n    if (!choosedUserId) {\n      toggleUserError(true);\n    }\n  };\n\n  const addTask = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    if (!inputValue || !choosedUserId) {\n      printError();\n\n      return;\n    }\n\n    const newTask: Todo = {\n      id: newTaskId,\n      title: inputValue,\n      completed: false,\n      userId: choosedUserId,\n      user: getUser(choosedUserId),\n    };\n\n    newTaskId += 1;\n\n    changeTodosList((tasks) => {\n      return [\n        ...tasks,\n        newTask,\n      ];\n    });\n\n    changeUserId(0);\n    changeInputValue('');\n  };\n\n  const handleInput = (\n    event: ChangeEvent<HTMLInputElement | HTMLSelectElement>,\n  ) => {\n    const {\n      value,\n      id,\n    } = event.target;\n\n    switch (id) {\n      case 'titleInput':\n        changeInputValue(value.replace(/[^а-яА-ЯіІїЇ'a-zA-Z0-9 ]/g, ''));\n        toggleInputError(false);\n        break;\n\n      case 'userSelect':\n        changeUserId(+value);\n        toggleUserError(false);\n        break;\n\n      default:\n        throw new Error(`invalid input id: ${id}`);\n    }\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Add todo form</h1>\n\n      <form\n        action=\"/api/users\"\n        method=\"POST\"\n        onSubmit={addTask}\n      >\n        <div className=\"field\">\n          <label htmlFor=\"titleInput\">Title: </label>\n\n          <input\n            type=\"text\"\n            data-cy=\"titleInput\"\n            id=\"titleInput\"\n            placeholder=\"Enter a title\"\n            value={inputValue}\n            onChange={handleInput}\n          />\n\n          {showInputError && (\n            <span className=\"error\">Please enter a title</span>\n          )}\n        </div>\n\n        <div className=\"field\">\n          <label htmlFor=\"userSelect\">User: </label>\n\n          <select\n            data-cy=\"userSelect\"\n            id=\"userSelect\"\n            value={choosedUserId}\n            onChange={handleInput}\n          >\n            <option value=\"0\" disabled>Choose a user</option>\n\n            {usersFromServer.map((user) => {\n              const {\n                name,\n                id,\n              } = user;\n\n              return (\n                <option value={id} key={id}>\n                  {name}\n                </option>\n              );\n            })}\n          </select>\n\n          {showUserError && (\n            <span className=\"error\">Please choose a user</span>\n          )}\n        </div>\n\n        <button\n          type=\"submit\"\n          data-cy=\"submitButton\"\n        >\n          Add\n        </button>\n      </form>\n\n      <TodoList todos={todosList} />\n    </div>\n  );\n};\n","export default [\n  {\n    id: 1,\n    title: 'delectus aut autem',\n    completed: true,\n    userId: 1,\n  },\n  {\n    id: 15,\n    title: 'some other todo',\n    completed: false,\n    userId: 1,\n  },\n  {\n    id: 2,\n    title: 'quis ut nam facilis et officia qui',\n    completed: false,\n    userId: 4,\n  },\n];\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}